trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  SOURCES_DIR: $[coalesce(variables['SOURCES_DIR_OVERRIDE'], '$(Build.SourcesDirectory)')]
  TRAIN_SCRIPT_PATH: $[coalesce(variables['TRAIN_SCRIPT_PATH_OVERRIDE'], 'src/train/train.py')]
  MODEL_DIR: $[coalesce(variables['MODEL_DIR_OVERRIDE'], '/dbfs/model')]
  MODEL_NAME: $[coalesce(variables['MODEL_NAME_OVERRIDE'], 'MLOps-model')]
  DATABRICKS_COMPUTE_NAME_AML: $[coalesce(variables['DATABRICKS_COMPUTE_NAME_AML_OVERRIDE'], 'ADB-Compute')]

steps:
- template: base-pipeline.yml
  parameters:
    requirementsPath: 'requirements.txt'

- bash: |
   #Create Azure Databricks cluster
   
   DATABRICKS_CLUSTER_ID=$(python3 $(Build.SourcesDirectory)/cluster_config/cluster_manager.py 2>&1 >/dev/null) 
   
   echo "##vso[task.setvariable variable=existing_databricks_cluster_id]$DATABRICKS_CLUSTER_ID"  
  env:
    DATABRICKS_ACCESS_TOKEN: $(DATABRICKS_ACCESS_TOKEN)
  failOnStderr: 'true'
  displayName: 'Initialize Databricks Cluster'

- bash: |
   # Login to Databricks CLI and create dbfs direcotory for model
   databricks configure --token << ANSWERS
   https://$(DATABRICKS_DOMAIN)
   $(DATABRICKS_ACCESS_TOKEN)
   ANSWERS
   dbfs mkdirs dbfs:/model
  failOnStderr: 'true'
  displayName: 'Login to ADB CLI and create DBFS model directory'

- bash: |
   # Invoke the Python training pipeline
      
   python3 $(Build.SourcesDirectory)/aml_service/pipelines/train_pipeline.py
  failOnStderr: 'false'
  env:
    SOURCES_DIR: '$(Build.SourcesDirectory)'
    SP_APP_SECRET: '$(SP_APP_SECRET)'
    DATABRICKS_ACCESS_TOKEN: '$(DATABRICKS_ACCESS_TOKEN)'
  displayName: 'Train model using AML with Remote Compute'
  enabled: 'true'

- bash: |
   # Clean dbfs model directory
   dbfs rm dbfs:/model -r
  failOnStderr: 'true'
  displayName: 'Remove DBFS model directory'

- bash: |
   # Terminate Azure Databricks cluster
   
   python3 $(Build.SourcesDirectory)/cluster_config/cluster_manager.py --terminate
   
   echo "Cluster: $(existing_databricks_cluster_id) terminated successfully."
  failOnStderr: 'true'
  displayName: 'Terminate Databricks Cluster'
  enabled: 'false'
